#!/bin/bash

# –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è Vaults.cc
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy.sh [server-ip] [ssh-key-path]

set -e

SERVER_IP=${1:-"your-server-ip"}
SSH_KEY=${2:-"~/.ssh/id_rsa"}
PROJECT_NAME="vaults-cc"
REMOTE_PATH="/opt/vaults-cc"

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä $SERVER_IP..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ SSH –∫–ª—é—á–∞
if [ ! -f "$SSH_KEY" ]; then
    echo "‚ùå SSH –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω: $SSH_KEY"
    exit 1
fi

# –°–æ–∑–¥–∞–Ω–∏–µ production build
echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ production build..."
npm run build

# –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –ø—Ä–æ–µ–∫—Ç–∞
echo "üìã –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞..."
tar -czf vaults-cc.tar.gz \
    --exclude=node_modules \
    --exclude=.next \
    --exclude=.git \
    --exclude="*.log" \
    .

# –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
echo "üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
scp -i "$SSH_KEY" vaults-cc.tar.gz root@$SERVER_IP:$REMOTE_PATH/
scp -i "$SSH_KEY" docker-compose.yml root@$SERVER_IP:$REMOTE_PATH/
scp -i "$SSH_KEY" Dockerfile root@$SERVER_IP:$REMOTE_PATH/

# –î–µ–ø–ª–æ–π —á–µ—Ä–µ–∑ SSH
echo "üîß –ó–∞–ø—É—Å–∫ –¥–µ–ø–ª–æ—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
ssh -i "$SSH_KEY" root@$SERVER_IP << 'EOF'
cd /opt/vaults-cc

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
docker-compose down || true

# –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞
tar -xzf vaults-cc.tar.gz
rm vaults-cc.tar.gz

# –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫
docker-compose build --no-cache
docker-compose up -d

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
docker-compose ps

echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
echo "üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://$(curl -s ifconfig.me):3000"
EOF

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
rm vaults-cc.tar.gz

echo "üéâ –î–µ–ø–ª–æ–π —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!" 